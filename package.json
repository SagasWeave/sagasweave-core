{
  "name": "sagasweave-core",
  "version": "0.1.0",
  "private": true,
  "description": "SagasWeave Core Monorepo",
  "author": "Your Name",
  "license": "MIT",
  "workspaces": ["apps/*", "packages/*"],
  "scripts": {
    "install:all": "npm install",
    "dev": "concurrently \"npm run dev --workspace=apps/frontend\" \"npm run dev --workspace=apps/backend\"",
    "dev:frontend": "npm run dev --workspace=apps/frontend",
    "dev:backend": "npm run dev --workspace=apps/backend",
    "build": "npm run build --workspace=apps/frontend && npm run build --workspace=apps/backend",
    "build:frontend": "npm run build --workspace=apps/frontend",
    "build:backend": "npm run build --workspace=apps/backend",
    "start": "npm run start --workspace=apps/backend",
    "test:naming": "node scripts/validate-naming.js",
    "test:unit": "npm run test --workspace=apps/backend && npm run test --workspace=apps/frontend",
    "test:coverage": "npm run test:coverage --workspace=apps/backend && npm run test:coverage --workspace=apps/frontend",
    "test:e2e": "vitest run --config vitest.config.e2e.ts",
    "test:e2e:ui": "vitest --ui --config vitest.config.e2e.ts",
    "test": "npm run test:naming && npm run test:unit",
    "refactor:naming": "node scripts/refactor-naming.js",
    "fix:naming": "node scripts/auto-fix-naming.js",
    "fix:naming:dry": "node scripts/auto-fix-naming.js --dry-run",
    "fix:naming:interactive": "node scripts/auto-fix-naming.js --interactive",
    "lint:biome": "npx biome check .",
    "lint:biome:fix": "npx biome check --apply .",
    "format:biome": "npx biome format --write .",
    "refactor:ast-grep": "npx ast-grep scan",
    "refactor:ast-grep:fix": "npx ast-grep scan --update-all",
    "refactor:comby": "comby -config .comby.toml -directory src",
    "refactor:jscodeshift": "npx jscodeshift -t codemods/sw-naming-transform.js src --parser=tsx --extensions=ts,tsx,js,jsx",
    "move:shared": "node scripts/auto-move-to-shared.js",
    "naming:check-all": "npm run test:naming && npm run lint:biome && npm run refactor:ast-grep",
    "naming:fix-all": "npm run fix:naming:dry && npm run lint:biome:fix && npm run refactor:ast-grep:fix",
    "mcp:build": "cd scripts/mcp-services/mcp-npm-test-server && npm run build",
    "mcp:start": "cd scripts/mcp-services/mcp-npm-test-server && npm run start",
    "mcp:start:bg": "cd scripts/mcp-services/mcp-npm-test-server && nohup npm run start:daemon > ../../../mcp-server.log 2>&1 & echo $! > ../../../mcp-server.pid && echo 'MCP server started in background (PID: '$!'). Log: mcp-server.log'",
    "mcp:auto-start": "./scripts/mcp-auto-start.sh",
    "mcp:stop": "if [ -f mcp-server.pid ]; then kill $(cat mcp-server.pid) && rm mcp-server.pid && echo 'MCP server stopped'; else echo 'No MCP server PID file found'; fi",
    "mcp:status": "if [ -f mcp-server.pid ] && kill -0 $(cat mcp-server.pid) 2>/dev/null; then echo 'MCP server is running (PID: '$(cat mcp-server.pid)')'; else echo 'MCP server is not running'; fi",
    "mcp:logs": "tail -f mcp-server.log",
    "mcp:dev": "cd scripts/mcp-services/mcp-npm-test-server && npm run dev"
  },
  "devDependencies": {
    "@ast-grep/cli": "^0.15.0",
    "@biomejs/biome": "^1.4.1",
    "@types/node": "^20.10.5",
    "@vitest/coverage-v8": "^1.1.0",
    "@vitest/ui": "^1.1.0",
    "concurrently": "^8.2.2",
    "jscodeshift": "^0.15.1",
    "puppeteer": "^24.12.1",
    "typescript": "^5.0.0",
    "vitest": "^1.1.0"
  }
}
