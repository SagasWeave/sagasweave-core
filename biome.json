{
  "$schema": "https://biomejs.dev/schemas/1.4.1/schema.json",
  "organizeImports": {
    "enabled": true
  },
  "linter": {
    "enabled": true,
    "rules": {
      "recommended": true,
      "style": {
        "useNamingConvention": {
          "level": "error",
          "options": {
            "strictCase": false,
            "requireAscii": true,
            "enumMemberCase": "PascalCase",
            "conventions": [
              {
                "selector": {
                  "kind": "variable"
                },
                "match": "sw[A-Z][a-zA-Z0-9]*",
                "formats": ["camelCase"]
              },
              {
                "selector": {
                  "kind": "function"
                },
                "match": "sw[A-Z][a-zA-Z0-9]*",
                "formats": ["camelCase"]
              },
              {
                "selector": {
                  "kind": "class"
                },
                "match": "Sw[A-Z][a-zA-Z0-9]*",
                "formats": ["PascalCase"]
              },
              {
                "selector": {
                  "kind": "interface"
                },
                "match": "Sw[A-Z][a-zA-Z0-9]*",
                "formats": ["PascalCase"]
              },
              {
                "selector": {
                  "kind": "typeAlias"
                },
                "match": "Sw[A-Z][a-zA-Z0-9]*",
                "formats": ["PascalCase"]
              },
              {
                "selector": {
                  "kind": "enum"
                },
                "match": "Sw[A-Z][a-zA-Z0-9]*",
                "formats": ["PascalCase"]
              },
              {
                "selector": {
                  "kind": "objectLiteralProperty"
                },
                "formats": ["camelCase", "PascalCase", "snake_case"]
              },
              {
                "selector": {
                  "kind": "objectLiteralMethod"
                },
                "formats": ["camelCase"]
              },
              {
                "selector": {
                  "kind": "typeParameter"
                },
                "formats": ["PascalCase"]
              }
            ]
          }
        }
      },
      "correctness": {
        "noUnusedVariables": "error",
        "noUnusedImports": "error"
      },
      "suspicious": {
        "noExplicitAny": "warn"
      }
    }
  },
  "formatter": {
    "enabled": true,
    "formatWithErrors": false,
    "indentStyle": "space",
    "indentWidth": 2,
    "lineWidth": 100,
    "lineEnding": "lf"
  },
  "javascript": {
    "formatter": {
      "quoteStyle": "single",
      "trailingCommas": "es5",
      "semicolons": "always",
      "arrowParentheses": "always"
    }
  },
  "json": {
    "formatter": {
      "enabled": true
    }
  },
  "files": {
    "include": [
      "src/**/*.ts",
      "src/**/*.tsx",
      "src/**/*.js",
      "src/**/*.jsx",
      "scripts/**/*.js",
      "scripts/**/*.ts",
      "*.json"
    ],
    "ignore": ["node_modules", "dist", "build", "coverage", "*.min.js"]
  }
}
